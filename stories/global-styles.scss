@function map-deep-get($map, $keys...){
    @each $key in $keys {
        $map: map-get($map, $key);
    }
    @return $map;
}

@function palette($col, $variation:'base'){
    @return map-get(map-get($color, $col), $variation);
}
  
$color: (
    grey: (
        light-50: #f5f5f5,
        light-100: #e0e0e0,
        light-200: #cccccc,
        light-300: #adadad,
        light-400: #999999,
        base: #666666,
        dark-600: #474747,
        dark-700: #333333,
        dark-800: #292929,
        dark-900: #141414
    ),
    success: (
        light: #B6CFB5,
        base: #447F43,
        dark: #102D10
    ),
    error: (
        light: #F25A5A,
        base: #C70505,
        dark: #230101
    )
);
  
$breakpoint-size: (
    xs: (max: 575px),
    sm: (min: 576px,   max:767px),
    md: (min:768px,    max:991px),
    lg: (min: 992px,   max:1199px),
    xl: (min: 1200px, max: 1399px),
    xxl: (min: 1400px),
    sm-and-lower: (max: 767px),
    lg-and-bigger: (min: 992px)
);
@mixin breakpoint($size) {
    @if $size == 'xs' {
        @media(max-width: map-get(map-get($breakpoint-size,$size), 'max')) {
            @content;
        };
    }
    @else if $size == 'sm-and-lower' {
        @media(max-width: map-get(map-get($breakpoint-size,$size), 'max')) {
            @content;
        };
    }
    @else if $size == 'xxl' {
        @media(min-width: map-get(map-get($breakpoint-size, $size), 'min')) {
            @content;
        };
    }
    @else if $size == 'lg-and-bigger' {
        @media(min-width: map-get(map-get($breakpoint-size, $size), 'min')) {
            @content;
        };
    }
    @else {
        @media(min-width: map-get(map-get($breakpoint-size, $size), 'min') ) and (max-width: map-get(map-get($breakpoint-size,$size), 'max')) {
            @content;
        };
    }
};

$headerHeight: 70px;
$sidebarWidth: 245px;
$sidebarMinHeight: calc(100vh - $headerHeight);

html {
    font-size: 10px;
}
body {
    font-size: 1.6rem !important;
}

span.status-badge {
    color: white;
    border-radius: .5rem;
    padding: .5rem 1rem .3rem;
    display: inline-block;
    font-size: 1rem;
    font-weight: bold;
    text-transform: uppercase;
    margin-bottom: 1rem;
    &.stable {
        background-color: #447F43;
    }
    &.workinprogress {
        background-color: palette(error);
    }
    &.deprecated {
        background-color: palette(grey);
    }
}